<?xml version="1.0" encoding="UTF-8" ?>
<!--
 logback日志配置详解:
   1.跟标签:configuration 包含3个属性
        scan ：配置文件发生改变，将会重新加载；默认为true
        scanPeriod: 设置监控配置文件修改的时间间隔，当scan属性为true时生效，默认为60s
        debug: 打印logback内部日志，查看logback的运行状态，默认为false
   2.子节点:contextName
        用来设置上下文名称，每个logger都关联到logger的上下文，默认上下文名称为default
   3.子节点:property
        用来定义变量值，包含两个属性，name value 通过<property>定义的值会被插入到logger上下文中，可以使“${}”来使用变量
        name 变量名称
        value 变量值
   4.子节点timestamp 获取时间戳字符串，包含两个属性 key datePattern
        key 标识次timestamp 的名字
        datePattern 设置将当前时间（解析配置文件的时间）转换为字符串的模式，遵循java.txt.SimpleDateFormat的格式。
   5.子节点appender 负责写日志的组件，它有两个必要属性name和class。name指定appender名称，class指定appender的全限定名
        5.1、ConsoleAppender 把日志输出到控制台，有以下子节点：
　　　　　　<encoder>：对日志进行格式化。（具体参数稍后讲解 ）
　　　　　　<target>：字符串System.out(默认)或者System.err
        5.2、FileAppender：把日志添加到文件，有以下子节点：
　　　　　　<file>：被写入的文件名，可以是相对目录，也可以是绝对目录，如果上级目录不存在会自动创建，没有默认值。
　　　　　　<append>：如果是 true，日志被追加到文件结尾，如果是 false，清空现存文件，默认是true。
　　　　　　<encoder>：对记录事件进行格式化。（具体参数稍后讲解 ）
　　　　　　<prudent>：如果是 true，日志会被安全的写入文件，即使其他的FileAppender也在向此文件做写入操作，效率低，默认是 false。


-->
<configuration scan="true" scanPeriod="60 seconds" debug="true">

    <appender name="RollingFile"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--日志输出文件位置-->
        <file>/logs/pinyou.log</file>
        <encoder>
            <!--日志文件输出格式-->
            <pattern><![CDATA[%d{yyyy-MM-dd-HH:mm:ss.SSS} %level pinyou [%thread] - %class-%method-%line : %msg%n]]></pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>/logs/pinyou-%d{yyyy-MM-dd}.log.%i</fileNamePattern>
            <maxFileSize>100MB</maxFileSize>
        </rollingPolicy>
    </appender>

    <appender name="RollingFile_Async" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>100000</queueSize>
        <includeCallerData>true</includeCallerData>
        <appender-ref ref="RollingFile" />
    </appender>
    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern><![CDATA[%d{yyyy-MM-dd-HH:mm:ss.SSS} %level pinyou [%thread] - %class-%method-%line : %msg%n]]></pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
    </appender>

    <root level="INFO">
        <appender-ref ref="RollingFile_Async" />
        <appender-ref ref="STDOUT" />
    </root>
</configuration>